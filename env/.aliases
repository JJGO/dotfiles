#!/usr/bin/env zsh
function alias_if_exists() {
  # Does the alias only if the aliased program is installed
    if command -v $2 > /dev/null; then
        alias "$1"="$2"
    fi
}


# Better defaults
# alias ncdu='ncdu --confirm-quit --color dark'
alias crontab="VIM_CRONTAB=true crontab"
alias_if_exists 'diff' 'colordiff'
alias_if_exists 'ag' 'rg'
alias_if_exists 'vim' 'nvim'
alias_if_exists 'fdupes' 'jdupes'


# Shortcuts

## cd & ls
alias dc="cd"
if command -v exa > /dev/null; then
  alias ls=exa
  alias l="exa -1"
  alias la="exa -a"
fi

mvr () {
    # reverse mv
    mv $2 $1
}

alias cf='cd $(fd -t d | fzf)'



## Git
alias ga='git add'
alias gs='git status'
alias gu='git pull'
alias gg='git graph'
# unalias gd
alias gd='git diff'
alias gsu='git stash && git pull && git stash pop'
  # Note that gs is also ghostscript
alias ghostscript="/usr/local/bin/gs"
function gD(){
    git diff $@ | ydiff
}

## Jupyter
alias jc="jupyter console"
alias jco="jupyter nbconvert"
alias jn="jupyter notebook"
alias jn-b="jupyter notebook --no-browser"

# Yotube-DL
alias yt="yt-dlp"
alias yta="yt-dlp --extract-audio --audio-format mp3"
alias ytad="yt-dlp --extract-audio --audio-format mp3 --write-description --add-metadata --embed-thumbnail --write-info-json"
alias gdl="gallery-dl"

## Misc
alias my-ip="curl ipinfo.io/ip 2> /dev/null"
alias sr='screen -r'
alias sb='subl'
# alias tb="nc termbin.com 9999"
alias spell='aspell check --dont-backup'
alias grepc="grep -P --color=always" #Color grep

alias printpath='echo $PATH | sed "s/:/\\n/g"'
# Other
# alias matlabc='matlab -nodesktop -nosplash'
  # Create separator using current columns
alias sep='tput cols | python -c "import sys; print(\"=\"*int(sys.stdin.read().strip()))"'
alias rg="sep; rg -u"

alias clock='watch -n 0.1 "date +"%H:%M:%S" | toilet -f bigmono9"' # -f future
# Rename terminal Windows
  # $1 = type; 0 - both, 1 - tab, 2 - title
  # rest = text
setTerminalText () {
    # echo works in bash & zsh
    local mode=$1 ; shift
    echo -ne "\033]$mode;$@\007"
}
stt_both  () { setTerminalText 0 $@; }
stt_tab   () { setTerminalText 1 $@; }
stt_title () { setTerminalText 2 $@; }

tn () { stt_tab $@ && tmux new -s $@; }
ta () { stt_tab $@ && tmux a -t $@; }

###########################################################################################################################

# SECRET ALIASES
if [ -f ~/.secret-aliases ]; then
    source ~/.secret-aliases
fi

# LOCAL ALIASES
if [ -f ~/.local-aliases ]; then
    source ~/.local-aliases
fi

###########################################################################################################################

# Functions
# Like a local wormhole
function snd() {
    mkdir -p /tmp/passage
    /bin/cp $1 /tmp/passage
    /bin/rm /tmp/passage/last &>/dev/null || true
    echo $1 > /tmp/passage/last
}

function rcv() {
    file=$(cat /tmp/passage/last)
    /bin/cp -i "/tmp/passage/$file" $file
    /bin/rm "/tmp/passage/$file"
}

# Find docker container address with a given name
function daddr() {
    docker network ls | tail -n +2 | awk '{print $2}' | xargs docker network inspect | jq --arg NAME "$1" '.[].Containers | .[] | select(.Name == $NAME) | .IPv4Address'
}

# fzf
if command -v fzf > /dev/null; then

  function fzf-history() {
      local tac
      if which tac > /dev/null; then
          tac="tac"
      else
          tac="tail -r"
      fi
      BUFFER=$(\history -n 1 | fzf)
      CURSOR=$#BUFFER
  }
  # zle -N fzf-history
  # bindkey '^r' fzf-history

  fh() {
    print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed 's/ *[0-9]* *//')
  }

  # fkill - kill process
  fkill() {
    local pid
    pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

    if [ "x$pid" != "x" ]
    then
      echo $pid | xargs kill -${1:-9}
    fi
  }

  v() {
    local file
    if [[ -f $1 ]]; then
        vim $1
    else
        file="$(fasd -Rfl "$1" | fzf -1 -0 --no-sort +m)" && vim "${file}" || return 1
    fi
  }

  if command -v subl > /dev/null; then
    u() {
      local file
      file="$(fasd -Rfl "$1" | fzf -1 -0 --no-sort +m)" && subl "${file}" || return 1
    }
  fi

  #less on fuzzy find
  fl() {
    less $(fzf)
  }

fi

## Ripgrep-all

if command -v rga > /dev/null; then
    alias rgim="rga --rga-adapters=+tesseract -j4"
    # Interactive rga
    rga-fzf() {
        RG_PREFIX="rga --files-with-matches"
        local file
        file="$(
            FZF_DEFAULT_COMMAND="$RG_PREFIX '$1'" \
                fzf --sort --preview="[[ ! -z {} ]] && rga --pretty --context 5 {q} {}" \
                    --phony -q "$1" \
                    --bind "change:reload:$RG_PREFIX {q}" \
                    --preview-window="70%:wrap"
        )" &&
        echo "opening $file" &&
        xdg-open "$file"
    }
fi

# Complete from google
function auto() {
    url='https://www.google.com/complete/search?client=hp&hl=en&xhr=t'
    # NB: user-agent must be specified to get back UTF-8 data!
    curl -H 'user-agent: Mozilla/5.0' -sSG --data-urlencode "q=$*" "$url" |
        jq -r ".[1][][0]" |
        sed 's,</\?b>,,g'
}



###########################################################################################################################


# # Comment below if not fzf and fasd
# unalias z
# # fasd & fzf change directory - jump using `fasd` if given argument, filter output of `fasd` using `fzf` else'
# z() {
#   [ $# -gt 0 ] && fasd_cd -d "$*" && return
#   local dir
#   dir="$(fasd -Rdl "$1" | fzf -1 -0 --no-sort +m)" && cd "${dir}" || return 1
# }



# OS dependent aliases
case "$(uname -s)" in

   Darwin)
     # 'Mac OS X'

     alias clear-dnscache="dscacheutil -flushcache && sudo killall -HUP mDNSResponder"
     alias bu="brew update && brew outdated | xargs brew upgrade  && brew cleanup -s --prune=0"

     alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome &"
     alias chromec="/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary &"

     alias fuck='eval $(thefuck $(fc -ln -1)); history -r'
     alias readlink="greadlink"

     alias mvf='mv "$(pfs)"' # Move current finder selection

     # MacOS GNUs
     for i in awk cat chgrp chmod chown chroot cut date df du echo egrep env false fgrep find grep join kill link ln logname make mkdir mknod mktemp mv nice nohup paste perf printf pwd readlink realpath rm rmdir sed sort split tac tail tar tee test touch tr true truncate tty uniq unlink unzip uptime users who whoami yes zip; do
       alias_if_exists "$i" "g$i"
     done
     alias_if_exists "id" "/usr/local/bin/gid"
     alias rm="/usr/local/bin/grm -i"
     alias mv="/usr/local/bin/gmv -i"
     alias cp="/usr/local/bin/gcp -i"
     # alias_if_exists "ls" "/usr/local/bin/gls"
     alias veracrypt="/Applications/VeraCrypt.app/Contents/MacOS/VeraCrypt --text"
     alias sudoedit="sudo -E vim"
     alias casks="brew search --cask"
     alias caski="brew install --cask"
     alias caskx="brew uninstall --cask"
     alias casks="brew search --cask"
     alias caskl="brew list --cask"
     alias casko="brew outdated --cask"
     op() {
       local file
       if [[ -f $1 ]]; then
           open $1
       else
           file="$(fasd -Rl "$1" | fzf -1 -0 --no-sort +m)" && open "${file}" || return 1
       fi
     }
     ;;

   Linux)
     # echo 'Linux'
     ;;

   CYGWIN*|MINGW32*|MSYS*)
     # echo 'MS Windows'
     ;;

   # Add here more strings to compare
   # See correspondence table at the bottom of this answer

   *)
     # echo 'other OS'
     ;;
esac


# Shell dependent Alias (only zsh has global aliases)
case $SHELL in
*/zsh)
   # assume Zsh
   ;;
*/bash)
   # assume Bash
   ;;
*)
   # assume something else
   ;;
esac
